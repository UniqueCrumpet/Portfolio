#include "PlayerShip.h"
#include "../../Core/Renderer/ConsoleColours.h"

float const MOVEMENT_SPEED = 2.0f;
const int SCREEN_HEIGHT = 96;

CHAR_INFO ShipSprite[] = {
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_BLUE},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BRIGHT_RED},{0, BACKGROUND_RED},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_BLUE},{0, BACKGROUND_BLUE},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BRIGHT_RED},{0, BACKGROUND_BRIGHT_RED},{0, BACKGROUND_RED},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_SKYBLUE},{0, BACKGROUND_BLUE},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_BRIGHT_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_BRIGHT_RED},{0, BACKGROUND_BRIGHT_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},{0, BACKGROUND_RED},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},{0, BACKGROUND_BLACK},
	};

PlayerShip::PlayerShip()
	:m_UpKey(0)
	, m_DownKey(0)
	, m_bInitialised(false)
{

}

PlayerShip::~PlayerShip() {

}

void PlayerShip::Initialise(Vector2& position, int upKey, int downKey)
{
	m_UpKey = upKey;
	m_DownKey = downKey;

	Sprite::Initialise(ShipSprite, Vector2(11, 10));

	Vector2 startPosition(position.x - (Sprite::GetSize().x / 2),
		position.y - (Sprite::GetSize().y / 2));

	SetPosition(startPosition);

	m_bInitialised = true;
}

void PlayerShip::Update() {


	if (!m_bInitialised)
		return;

	if (UpKeyPressed()) {
		MoveUp();
	}

	if (DownKeyPressed()) {
		MoveDown();
	}
}

void PlayerShip::Render(ASCIIRenderer* pRenderer) {
	if (!m_bInitialised)
		return;

	Sprite::Render(pRenderer);
}

void PlayerShip::MoveUp() {
	SetPosition(Vector2(GetPosition().x, GetPosition().y - MOVEMENT_SPEED));

	if (GetPosition().y < 0)
	{
		MoveDown();
	}

}

void PlayerShip::MoveDown() {
	SetPosition(Vector2(GetPosition().x, GetPosition().y + MOVEMENT_SPEED));

	if (GetPosition().y + GetSize().y > SCREEN_HEIGHT)
	{
		MoveUp();
	}

}

bool PlayerShip::UpKeyPressed()
{
	return (GetKeyState(m_UpKey) < 0);
}

bool PlayerShip::DownKeyPressed()
{
	return (GetKeyState(m_DownKey) < 0);
}
